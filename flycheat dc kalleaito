-- Fly Script for Roblox (Toggle with E key) with Notification
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local UserInputService = game:GetService("UserInputService")
local flying = false
local bodyVelocity
local bodyGyro
local speed = 50 -- Adjust fly speed here

-- Display Notification
local function showNotification()
    local StarterGui = game:GetService("StarterGui")
    StarterGui:SetCore("SendNotification", {
        Title = "Fly Script",
        Text = "Made by kalleaito on Discord | E to fly",
        Duration = 10 -- Notification lasts for 10 seconds
    })
end

-- Run notification when script executes
showNotification()

-- Function to start flying
local function startFlying()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local humanoidRootPart = character.HumanoidRootPart
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.PlatformStand = true -- Disable default movement to allow flying
    end
    
    -- Create BodyVelocity for movement
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = humanoidRootPart
    
    -- Create BodyGyro for rotation
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000) -- Reduced for smoother control
    bodyGyro.CFrame = humanoidRootPart.CFrame
    bodyGyro.Parent = humanoidRootPart
    
    flying = true
    print("Flying enabled!")
    
    -- Update flying movement
    spawn(function()
        while flying and character and character.Parent and humanoidRootPart.Parent do
            local cam = workspace.CurrentCamera
            local direction = Vector3.new(0, 0, 0)
            
            -- WASD movement relative to camera
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                direction = direction + cam.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                direction = direction - cam.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                direction = direction - cam.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                direction = direction + cam.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                direction = direction + Vector3.new(0, 1, 0) -- Move up
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                direction = direction - Vector3.new(0, 1, 0) -- Move down
            end
            
            -- Normalize direction and apply speed
            if direction.Magnitude > 0 then
                direction = direction.Unit * speed
            end
            
            -- Apply velocity
            bodyVelocity.Velocity = direction
            -- Update gyro to face camera direction
            bodyGyro.CFrame = CFrame.new(Vector3.new(0, 0, 0), cam.CFrame.LookVector)
            
            wait()
        end
    end)
end

-- Function to stop flying
local function stopFlying()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.PlatformStand = false -- Re-enable default movement
        end
    end
    
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    if bodyGyro then
        bodyGyro:Destroy()
        bodyGyro = nil
    end
    flying = false
    print("Flying disabled!")
end

-- Toggle flying on E key press
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.E then
        if flying then
            stopFlying()
        else
            startFlying()
        end
    end
end)

-- Clean up when character is removed
player.CharacterRemoving:Connect(function()
    stopFlying()
end)
