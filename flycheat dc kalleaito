-- Fly Script for Roblox (Toggle with E key) with Notification
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local flying = false
local bodyVelocity
local bodyGyro
local speed = 50 -- Adjust fly speed here
local maxSpeed = 100 -- Maximum fly speed

-- Display Notification
local function showNotification()
    local StarterGui = game:GetService("StarterGui")
    StarterGui:SetCore("SendNotification", {
        Title = "Fly Script",
        Text = "Made by kalleaito on Discord",
        Duration = 5 -- Notification lasts for 5 seconds
    })
end

-- Run notification when script executes
showNotification()

-- Function to start flying
local function startFlying()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local humanoidRootPart = character.HumanoidRootPart
    
    -- Create BodyVelocity for movement
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = humanoidRootPart
    
    -- Create BodyGyro for rotation
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.CFrame = humanoidRootPart.CFrame
    bodyGyro.Parent = humanoidRootPart
    
    flying = true
    print("Flying enabled!")
    
    -- Update flying movement
    spawn(function()
        while flying and character and character.Parent and humanoidRootPart.Parent do
            local cam = workspace.CurrentCamera
            local direction = Vector3.new()
            
            -- Get input from keyboard for movement
            if mouse:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                direction = (cam.CFrame.LookVector * speed)
            end
            
            -- WASD movement
            local UserInputService = game:GetService("UserInputService")
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                direction = direction + (cam.CFrame.LookVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                direction = direction - (cam.CFrame.LookVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                direction = direction - (cam.CFrame.RightVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                direction = direction + (cam.CFrame.RightVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                direction = direction + (Vector3.new(0, speed, 0))
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                direction = direction - (Vector3.new(0, speed, 0))
            end
            
            -- Apply velocity
            bodyVelocity.Velocity = direction
            bodyGyro.CFrame = cam.CFrame
            
            wait()
        end
    end)
end

-- Function to stop flying
local function stopFlying()
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    if bodyGyro then
        bodyGyro:Destroy()
        bodyGyro = nil
    end
    flying = false
    print("Flying disabled!")
end

-- Toggle flying on E key press
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.E then
        if flying then
            stopFlying()
        else
            startFlying()
        end
    end
end)

-- Clean up when character is removed
player.CharacterRemoving:Connect(function()
    stopFlying()
end)
